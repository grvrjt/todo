{"version":3,"sources":["Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Listitems","props","items","console","log","listItems","map","item","className","type","value","text","id","key","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","newItems","filteredItems","filter","onSubmit","this","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA2CeA,MAvCf,SAAmBC,GACjB,IAAMC,EAAQD,EAAMC,MAEpBC,QAAQC,IAAI,0BAA2BF,GACvC,IAAMG,EAAYH,EAAMI,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,KAAK,OACLC,MAAOH,EAAKI,KACZC,GAAIL,EAAKM,IACTC,SAAU,SAACC,GACTd,EAAMe,UAAUD,EAAEE,OAAOP,MAAOH,EAAKM,QAGzC,+BACE,cAAC,IAAD,CACEL,UAAU,UACVU,KAAK,QACLC,QAAS,WACPlB,EAAMmB,WAAWb,EAAKM,cAfLN,EAAKM,QAwBpC,OACE,8BACE,cAAC,IAAD,CAAUQ,SAAU,IAAKC,OAAO,cAAhC,SACGjB,O,eChCTkB,IAAQC,IAAIC,K,IAsFGC,E,kDApFb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAWR0B,YAAc,SAACZ,GACb,EAAKa,SAAS,CACZC,YAAa,CACXlB,KAAMI,EAAEE,OAAOP,MACfG,IAAKiB,KAAKC,UAhBG,EAqBnBC,QAAU,SAACjB,GACTA,EAAEkB,iBACF,IAAMC,EAAU,EAAKC,MAAMN,YAE3B,GADA1B,QAAQC,IAAI8B,GACS,KAAjBA,EAAQvB,KAAa,CACvB,IAAMyB,EAAQ,sBAAO,EAAKD,MAAMjC,OAAlB,CAAyBgC,IACvC,EAAKN,SACH,CACE1B,MAAOkC,EACPP,YAAa,CACXlB,KAAM,GACNE,IAAK,MAGT,WACEV,QAAQC,IAAI,gBAAc,EAAK+B,YApCpB,EA0CnBf,WAAa,SAACP,GACZ,IAAMwB,EAAgB,EAAKF,MAAMjC,MAAMoC,QAAO,SAAC/B,GAAD,OAAUA,EAAKM,MAAQA,KACrE,EAAKe,SAAS,CACZ1B,MAAOmC,KA7CQ,EAiDnBrB,UAAY,SAACL,EAAME,GACjB,IAAMX,EAAQ,EAAKiC,MAAMjC,MACzBA,EAAMI,KAAI,SAACC,GACLA,EAAKM,MAAQA,IACfN,EAAKI,KAAOA,MAGhB,EAAKiB,SAAS,CACZ1B,MAAOA,KAtDT,EAAKiC,MAAQ,CACXjC,MAAO,GACP2B,YAAa,CACXlB,KAAM,GACNE,IAAK,KAPQ,E,0CA4DnB,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,iCACE,uBAAMI,GAAG,aAAa2B,SAAUC,KAAKR,QAArC,UACE,uBACEvB,KAAK,OACLC,MAAO8B,KAAKL,MAAMN,YAAYlB,KAC9BG,SAAU0B,KAAKb,YACfc,YAAY,wBAEd,wBAAQhC,KAAK,SAAb,sBAGJ,cAAC,EAAD,CACEP,MAAOsC,KAAKL,MAAMjC,MAClBkB,WAAYoB,KAAKpB,WACjBJ,UAAWwB,KAAKxB,mB,GA9ER0B,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dd89d62.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ListItems.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport  FlipMove  from \"react-flip-move\";\nfunction Listitems(props) {\n  const items = props.items;\n\n  console.log(\"in list item compmonent\", items);\n  const listItems = items.map((item) => {\n    return (\n      <div className=\"list\" key={item.key}>\n        <p>\n          <input\n            type=\"text\"\n            value={item.text}\n            id={item.key}\n            onChange={(e) => {\n              props.setUpdate(e.target.value, item.key);\n            }}\n          />\n          <span>\n            <FontAwesomeIcon\n              className=\"faicons\"\n              icon=\"trash\"\n              onClick={() => {\n                props.deleteItem(item.key);\n              }}\n            ></FontAwesomeIcon>\n          </span>\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <FlipMove duration={500} easing=\"ease-in-out\">\n        {listItems}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default Listitems;\n","import React from \"react\";\nimport \"./App.css\";\nimport Listitems from \"./Listitems\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash);\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\",\n      },\n    };\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  };\n\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if (newItem.text !== \"\") {\n      const newItems = [...this.state.items, newItem];\n      this.setState(\n        {\n          items: newItems,\n          currentItem: {\n            text: \"\",\n            key: \"\",\n          },\n        },\n        () => {\n          console.log(\"data ---->\", this.state);\n        }\n      );\n    }\n  };\n\n  deleteItem = (key) => {\n    const filteredItems = this.state.items.filter((item) => item.key !== key);\n    this.setState({\n      items: filteredItems,\n    });\n  };\n\n  setUpdate = (text, key) => {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items,\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n              placeholder=\"Enter the text here\"\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <Listitems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        ></Listitems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}